{"version":3,"sources":["components/Button/style.ts","components/Button/Button.tsx","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","helper/getDuration.ts","../../../../src/lib/helpers/getTimeParts.ts","assets/icons/stop.svg","utils/yup.ts","../../../../src/lib/models/TimerModel.ts","helper/audio/encoder-wav-worker.js","helper/audio/encoder-mp3-worker.js","helper/audio/encoder-flac-worker.js","helper/audio/RecorderService.js","components/MicRecorder/style.ts","components/MicRecorder/MicRecorder.tsx","containers/SubmitSteps/RecordingsSteps/Introduction/Record/Record.tsx","modals/RecordErrorModal/style.ts","modals/RecordErrorModal/RecordErrorModal.tsx","containers/SubmitSteps/RecordingsSteps/Introduction/Record/style.ts","helper/fileHelper.ts","../../src/index.ts","../../../../src/components/Timer/Timer.tsx","../../../../src/lib/helpers/now.ts","../../../../src/lib/models/TimerState.ts","../../../src/hook/useTimer.ts","assets/icons/start.svg","assets/icons/upload.svg"],"names":["StyledButton","styled","button","dark","color","disabled","colors","purple_50","purple","white","Button","React","memo","children","props","type","WizardButtonsContainer","div","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","getDuration","e","remove","Promise","resolver","duration","Infinity","isSafari","addEventListener","pause","volume","currentTime","play","units","lastUnitIndex","findIndex","unit","dividers","module","exports","Yup","maxDuration","this","test","value","a","file","audio","Audio","URL","createObjectURL","defaultMuted","muted","load","audioMaxSizeInMb","size","recorded","onmessage","data","buffer","length","Uint8Array","i","index","sample","push","encode","sampleRate","bufferLength","wav","view","DataView","setUint32","setUint16","CHANNELS","set","msg","postMessage","dump","close","mp3encoder","mp3Data","convertBuffer","arrayBuffer","Float32Array","out","Int16Array","input","output","s","Math","max","min","floatTo16BitPCM","opts","samplesMono","remaining","left","subarray","encodeBuffer","mp3buf","flush","importScripts","baseUrl","lamejs","Mp3Encoder","flacEncoder","workersHost","process","REACT_APP_WORKERS_HOST","SAMPLERATE","COMPRESSION","BPS","flacOk","flacLength","flacBuffers","wavBuffers","writeCallbackFn","bytes","byteLength","initFlac","Flac","create_libflac_encoder","statusEncoder","init_encoder_stream","console","log","error","doEncodeFlac","audioData","bufLength","bufferI32","Uint32Array","setInt32","flacReturn","FLAC__stream_encoder_process_interleaved","exportFlacFile","recBuffers","recLength","samples","channelBuffer","recordingLength","result","offset","lng","mergeBuffersUint8","Blob","config","finalConfig","bps","channels","samplerate","compression","isReady","onready","setTimeout","init","len","buffered","splice","info","encodeFlac","FLAC__stream_encoder_finish","FLAC__stream_encoder_delete","RecorderService","cleanup","onRecording","em","removeEventListener","recordingFn","onAudioProcesss","onAudioProcessFn","createWorker","fn","js","toString","replace","blob","Worker","startRecording","timeslice","state","navigator","mediaDevices","getUserMedia","audioCtx","AudioContext","micGainNode","createGain","outputGainNode","createDynamicsCompressorNode","dynamicsCompressorNode","createDynamicsCompressor","createAnalyserNode","analyserNode","createAnalyser","forceScriptProcessor","broadcastAudioProcessEvents","usingMediaRecorder","processorNode","createScriptProcessor","processorBufferSize","createMediaStreamDestination","destinationNode","destination","manualEncoderId","encoderWorker","EncoderMp3","encoderMimeType","EncoderFlac","EncoderWav","event","Event","_onDataAvailable","userMediaConstraints","echoCancellation","enableEchoCancellation","deviceId","then","stream","_startRecordingWithStream","catch","setMicGain","newGain","micGain","gain","setValueAtTime","micAudioStream","inputStreamNode","createMediaStreamSource","context","onGraphSetupWithInputStream","connect","nextNode","onaudioprocess","_onAudioProcess","mediaRecorder","MediaRecorder","mimeType","evt","_onError","start","slicing","setInterval","dispatchEvent","CustomEvent","detail","inputBuffer","outputBuffer","getChannelData","stopRecording","stop","clearInterval","chunks","chunkType","blobUrl","recording","ts","Date","getTime","disconnect","stopTracksAndCloseCtxWhenFinished","getTracks","forEach","track","window","webkitAudioContext","document","createDocumentFragment","undefined","onAudioPress","MicRecorderContainer","MicButtonsContainer","MicButtonWithText","MicNote","p","lightDarkGray","MicRecorderButton","opacity","MicRecorderImage","img","MicRecorderStartImage","MicRecorderStopImage","MicRecorderTimerContainer","MicRecorderTimerReleaseTextContainer","red","MicRecorderTextP","show","baseConfig","className","maxTimeInSeconds","minTimeInSeconds","onNewRecord","delay","recordingFile","isShortAudioCollection","t","useTranslation","recordingService","useRef","audioSamples","timerRef","timeout","target","useState","micAllowed","setMicAllowed","recordingInProgress","setRecordingInProgress","showReleaseText","setShowReleaseText","showShortRecordingText","setShowShortRecordingText","longPressTriggered","setLongPressTriggered","onAudioProcess","useCallback","current","channel","numberOfChannels","inputData","outputData","onNewRecording","fetch","r","fileName","FileHelper","blobToFile","humanReadableSize","sizeAsHuman","useEffect","err","Sentry","listenerFn","setTime","handleStartRecording","reset","handleStopRecording","handleFormatValue","preventDefault","handleStartLongPress","passive","handleEndLongPress","clearTimeout","RecordErrorModal","isOpen","modalTitle","onConfirm","seconds","ref","startImmediately","checkpoints","time","callback","Minutes","Seconds","formatValue","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseLeave","src","StartSVG","alt","StopSVG","audioMinLength","recordYourBreath","recordYourSpeech","recordYourCough","schema","object","mixed","required","validateAudioSize","when","_schema","validateAudioLength","defined","onNext","onManualUpload","defaultValues","currentLogic","action","Portal","usePortal","bindTo","getElementById","useForm","mode","_currentLogic","yupResolver","handleSubmit","control","getValues","formState","isValid","micKey","name","render","onChange","key","uploadedFile","UploadSVG","ModalBody","ModalTitle","ModalContent","Modal","setAppElement","style","content","height","maxWidth","margin","borderRadius","border","overlay","backgroundColor","MainContainer","Text","BlackText","darkBlack","MicContainer","UploadContainer","UploadImage","UploadText","StopImg","attrs","si","thresh","abs","u","toFixed","theBlob","b","lastModifiedDate","react_1"],"mappings":"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","file":"static/js/36.551d9199.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 15px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.purple_50 : colors.purple;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n    min-height: 50px;\n    margin-bottom: 8px;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","import { isSafari } from 'react-device-detect';\n\nexport function getDuration(e: HTMLAudioElement, remove?: boolean): Promise<number> {\n  return new Promise(resolver => {\n    if (e.duration !== Infinity\n        && (!isSafari\n        || (isSafari && e.duration > 0))) {\n      resolver(e.duration);\n      return;\n    }\n    e.addEventListener('durationchange', () => {\n      if (remove) {\n        e.remove();\n      } else {\n        e.pause();\n        e.volume = 1;\n        e.currentTime = 0;\n      }\n      resolver(e.duration);\n    });\n    e.currentTime = 24 * 60 * 60; // Unprobable time\n    e.play();\n  });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getTimeParts(time, lastUnit) {\n    var units = ['ms', 's', 'm', 'h', 'd'];\n    var lastUnitIndex = units.findIndex(function (unit) { return unit === lastUnit; });\n    var dividers = [1000, 60, 60, 24, 1];\n    var dividersAcc = [1, 1000, 60000, 3600000, 86400000];\n    var startValue = {\n        ms: 0,\n        s: 0,\n        m: 0,\n        h: 0,\n        d: 0,\n    };\n    var output = units.reduce(function (obj, unit, index) {\n        if (index > lastUnitIndex) {\n            obj[unit] = 0;\n        }\n        else if (index === lastUnitIndex) {\n            obj[unit] = Math.floor(time / dividersAcc[index]);\n        }\n        else {\n            obj[unit] = Math.floor(time / dividersAcc[index]) % dividers[index];\n        }\n        return obj;\n    }, startValue);\n    return output;\n}\nexports.default = getTimeParts;\n//# sourceMappingURL=getTimeParts.js.map","module.exports = __webpack_public_path__ + \"static/media/stop.c2f5fdba.svg\";","import * as Yup from 'yup';\nimport { getDuration } from '../helper/getDuration';\n// import { isSafari } from 'react-device-detect';\n\nYup.addMethod(Yup.mixed, 'validateAudioLength', function validate(maxDuration: number) {\n  // @ts-ignore\n  return this.test('fileDuration', 'ERROR.FILE_DURATION', async (value?: any) => {\n    if (value) {\n      const file = value as File;\n      const audio = new Audio(URL.createObjectURL(file));\n      audio.defaultMuted = true;\n      audio.muted = true;\n      audio.load();\n      await new Promise(resolver => audio.addEventListener('loadedmetadata', resolver));\n      const duration = await getDuration(audio);\n      return (duration >= maxDuration);\n    }\n    return !!value;\n  });\n});\n\nYup.addMethod(Yup.mixed, 'validateAudioSize', function validate(audioMaxSizeInMb: number) {\n  // @ts-ignore\n  return this.test('fileSize', 'ERROR.FILE_SIZE', (value?: any) => {\n    if (value) {\n      const file = value as File;\n      const { size } = file;\n      return (size <= 1024 ** 3 * audioMaxSizeInMb);\n    }\n    return !!value;\n  });\n});\n\nexport default Yup;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\nvar now_1 = __importDefault(require(\"../helpers/now\"));\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\nvar TimerModel = /** @class */ (function () {\n    function TimerModel(_a) {\n        var initialTime = _a.initialTime, direction = _a.direction, timeToUpdate = _a.timeToUpdate, lastUnit = _a.lastUnit, checkpoints = _a.checkpoints, onChange = _a.onChange;\n        this.internalTime = now_1.default();\n        this.initialTime = initialTime;\n        this.time = initialTime;\n        this.direction = direction;\n        this.timeToUpdate = timeToUpdate;\n        this.lastUnit = lastUnit;\n        this.checkpoints = checkpoints;\n        this.innerState = new TimerState_1.default(onChange);\n        this.onChange = onChange;\n        this.timerId = null;\n    }\n    Object.defineProperty(TimerModel.prototype, \"state\", {\n        get: function () {\n            return this.innerState.getState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n        get: function () {\n            return this.getTimeParts(this.computeTime());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimerModel.prototype.getTimeParts = function (time) {\n        return getTimeParts_1.default(time, this.lastUnit);\n    };\n    TimerModel.prototype.setTime = function (time) {\n        this.internalTime = now_1.default();\n        this.initialTime = time;\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.getTime = function () {\n        return this.time;\n    };\n    TimerModel.prototype.setLastUnit = function (lastUnit) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.lastUnit = lastUnit;\n            this.resume(true);\n        }\n        else {\n            this.lastUnit = lastUnit;\n        }\n    };\n    TimerModel.prototype.setTimeToUpdate = function (interval) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.timeToUpdate = interval;\n            this.resume();\n        }\n        else {\n            this.timeToUpdate = interval;\n        }\n    };\n    TimerModel.prototype.setDirection = function (direction) {\n        this.direction = direction;\n    };\n    TimerModel.prototype.setCheckpoints = function (checkpoints) {\n        this.checkpoints = checkpoints;\n    };\n    TimerModel.prototype.start = function () {\n        if (this.innerState.setPlaying()) {\n            this.setTimerInterval(true);\n        }\n    };\n    TimerModel.prototype.resume = function (callImmediately) {\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n            this.setTimerInterval(callImmediately);\n        }\n    };\n    TimerModel.prototype.pause = function () {\n        if (this.innerState.setPaused()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.stop = function () {\n        if (this.innerState.setStopped()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.reset = function () {\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.setTimerInterval = function (callImmediately) {\n        var _this = this;\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (this.timerId) {\n            clearInterval(this.timerId);\n        }\n        this.internalTime = now_1.default();\n        var repeatedFunc = function () {\n            var oldTime = _this.time;\n            var updatedTime = _this.computeTime();\n            _this.onChange(_this.getTimeParts(updatedTime));\n            _this.checkpoints.map(function (_a) {\n                var time = _a.time, callback = _a.callback;\n                var checkForForward = time > oldTime && time <= updatedTime;\n                var checkForBackward = time < oldTime && time >= updatedTime;\n                var checkIntersection = _this.direction === 'backward' ?\n                    checkForBackward :\n                    checkForForward;\n                if (checkIntersection) {\n                    callback();\n                }\n            });\n        };\n        callImmediately && this.onChange(this.getTimeParts(this.time));\n        this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n    };\n    TimerModel.prototype.computeTime = function () {\n        if (this.innerState.isPlaying()) {\n            var currentInternalTime = now_1.default();\n            var delta = Math.abs(currentInternalTime - this.internalTime);\n            switch (this.direction) {\n                case 'forward':\n                    this.time = this.time + delta;\n                    this.internalTime = currentInternalTime;\n                    return this.time;\n                case 'backward': {\n                    this.time = this.time - delta;\n                    this.internalTime = currentInternalTime;\n                    if (this.time < 0) {\n                        this.stop();\n                        return 0;\n                    }\n                    return this.time;\n                }\n                default:\n                    return this.time;\n            }\n        }\n        return this.time;\n    };\n    return TimerModel;\n}());\nexports.TimerModel = TimerModel;\n//# sourceMappingURL=TimerModel.js.map","export default function () {\n  // Parts copied from https://github.com/chris-rudmin/Recorderjs\n  const BYTES_PER_SAMPLE = 2;\n  const CHANNELS = 1; // 1=mono , 2=Stereo\n  let recorded = [];\n\n  function encode(buffer) {\n    const { length } = buffer;\n    const data = new Uint8Array(length * BYTES_PER_SAMPLE * CHANNELS);\n    for (let i = 0; i < length; i += 1) {\n      const index = i * BYTES_PER_SAMPLE * CHANNELS;\n      let sample = buffer[i];\n      if (sample > 1) {\n        sample = 1;\n      } else if (sample < -1) {\n        sample = -1;\n      }\n      sample *= 32768;\n      data[index] = sample;\n      // eslint-disable-next-line no-bitwise\n      data[index + 1] = sample >> 8;\n    }\n    recorded.push(data);\n  }\n\n  function dump(sampleRate) {\n    const bufferLength = recorded.length ? recorded[0].length : 0;\n    const length = recorded.length * bufferLength;\n    const wav = new Uint8Array(44 + length);\n\n    const view = new DataView(wav.buffer);\n\n    // RIFF identifier 'RIFF'\n    view.setUint32(0, 1380533830, false);\n    // file length minus RIFF identifier length and file description length\n    view.setUint32(4, 36 + length, true);\n    // RIFF type 'WAVE'\n    view.setUint32(8, 1463899717, false);\n    // format chunk identifier 'fmt '\n    view.setUint32(12, 1718449184, false);\n    // format chunk length\n    view.setUint32(16, 16, true);\n    // sample format (raw)\n    view.setUint16(20, 1, true);\n    // channel count\n    view.setUint16(22, CHANNELS, true);\n    // sample rate\n    view.setUint32(24, sampleRate, true); // 44100 Khz\n    // byte rate (channels * sample rate * block align)\n    view.setUint32(28, CHANNELS * sampleRate * BYTES_PER_SAMPLE, true); // kbps = 1411\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, CHANNELS * BYTES_PER_SAMPLE, true);\n    // bits per sample\n    view.setUint16(34, 8 * BYTES_PER_SAMPLE, true); // 16\n    // data chunk identifier 'data'\n    view.setUint32(36, 1684108385, false);\n    // data chunk length\n    view.setUint32(40, length, true);\n\n    for (let i = 0; i < recorded.length; i += 1) {\n      wav.set(recorded[i], i * bufferLength + 44);\n    }\n\n    recorded = [];\n    const msg = [wav.buffer];\n    postMessage(msg, [msg[0]]);\n  }\n\n  this.onmessage = e => {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      dump(e.data[1]);\n    } else if (e.data[0] === 'close') {\n      this.close();\n    }\n  };\n}\n","// import 'babel-polyfill'\n// import lamejs from 'lamejs';\n\nexport default function () {\n  // Note that relative paths don't work when loaded as a blob\n  // https://stackoverflow.com/questions/22172426/using-importsscripts-within-blob-in-a-karma-environment\n  // importScripts('https://localhost:8443/workers/encoders/lame.js') // eslint-disable-line\n\n  const channels = 1; // 1 for mono or 2 for stereo\n  // let sampleRate = 44100 // 44.1khz (normal mp3 samplerate)\n  const kbps = 128; // encode 128kbps mp3\n\n  let mp3encoder = null;\n\n  const maxSamples = 1152;\n\n  let mp3Data = []; // array of Uint8Array\n\n  function init(opts) {\n    /* global lamejs */\n    importScripts(opts.baseUrl + '/workers/encoders/lame.min.js'); // eslint-disable-line\n    mp3encoder = new lamejs.Mp3Encoder(channels, opts.sampleRate, kbps);\n  }\n\n  function floatTo16BitPCM(input, output) {\n    for (let i = 0; i < input.length; i += 1) {\n      const s = Math.max(-1, Math.min(1, input[i]));\n      // eslint-disable-next-line no-param-reassign\n      output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF);\n    }\n  }\n\n  function convertBuffer(arrayBuffer) {\n    const data = new Float32Array(arrayBuffer);\n    const out = new Int16Array(arrayBuffer.length);\n    floatTo16BitPCM(data, out);\n    return out;\n  }\n\n  function encode(arrayBuffer) {\n    const samplesMono = convertBuffer(arrayBuffer);\n    let remaining = samplesMono.length;\n    for (let i = 0; remaining >= 0; i += maxSamples) {\n      const left = samplesMono.subarray(i, i + maxSamples);\n      const data = mp3encoder.encodeBuffer(left);\n      mp3Data.push(data);\n      remaining -= maxSamples;\n    }\n\n    // var mp3buf = mp3encoder.encodeBuffer(buffer)\n    // if (mp3buf.length > 0) {\n    //   mp3Data.push(mp3buf)\n    // }\n  }\n\n  function dump() {\n    const mp3buf = mp3encoder.flush();\n    if (mp3buf.length > 0) {\n      mp3Data.push(mp3buf);\n    }\n\n    // Probably results in native memory copy\n    postMessage(mp3Data);\n\n    // Would like to do this, but not possible because mp3Data is generic array of Uint8Array, and generic\n    // arrays are not transferrable types.\n    // postMessage(mp3Data, [mp3Data])\n\n    // This might help if/when ever become available again\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer\n\n    // For now, though, we have not other option except to build a complete copy in javascript. This means\n    // we temporarily require twice the memory of whatever was recorded.\n\n    mp3Data = [];\n  }\n\n  onmessage = function onmessage(e) {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      dump(e.data[1]);\n    } else if (e.data[0] === 'init') {\n      init(e.data[1]);\n    } else if (e.data[0] === 'close') {\n      this.close();\n    }\n  };\n}\n","/* eslint-disable */\n/* eslint-disable func-names */\n/* global Flac */\n\nexport default function () {\n  const workersHost = process.env.PUBLIC_URL || process.env.REACT_APP_WORKERS_HOST || 'https://virufy.org/study';\n  importScripts(`${workersHost}/workers/encoders/libflac.dev.js`); // eslint-disable-line\n\n  let flacEncoder;\n  let CHANNELS = 1;\n  let SAMPLERATE = 44100;\n  let COMPRESSION = 5;\n  let BPS = 16;\n  let flacOk = 1;\n  let flacLength = 0;\n  const flacBuffers = [];\n  let INIT = false;\n  const wavBuffers = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function writeCallbackFn(buffer, bytes) {\n    flacBuffers.push(buffer);\n    flacLength += buffer.byteLength;\n  }\n\n  // HELPER: handle initialization of flac encoder\n  function initFlac() {\n    flacEncoder = Flac.create_libflac_encoder(SAMPLERATE, CHANNELS, BPS, COMPRESSION, 0);\n    /// /\n    if (flacEncoder !== 0) {\n      const statusEncoder = Flac.init_encoder_stream(flacEncoder, writeCallbackFn);\n      flacOk &= (statusEncoder == 0);\n\n      console.log(`flac init     : ${flacOk}`);// DEBUG\n      console.log(`status encoder: ${statusEncoder}`);// DEBUG\n\n      INIT = true;\n    } else {\n      console.error('Error initializing the encoder.');\n    }\n  }\n\n  function init(config) {\n    let finalConfig = config;\n\n    if (!finalConfig) {\n      finalConfig = {\n        bps: BPS, channels: CHANNELS, samplerate: SAMPLERATE, compression: COMPRESSION,\n      };\n    }\n\n    finalConfig.channels = finalConfig.channels ? finalConfig.channels : CHANNELS;\n    finalConfig.samplerate = finalConfig.samplerate ? finalConfig.samplerate : SAMPLERATE;\n    finalConfig.bps = finalConfig.bps ? finalConfig.bps : BPS;\n    finalConfig.compression = finalConfig.compression ? finalConfig.compression : COMPRESSION;\n\n    /// /\n    COMPRESSION = finalConfig.compression;\n    BPS = finalConfig.bps;\n    SAMPLERATE = finalConfig.samplerate;\n    CHANNELS = finalConfig.channels;\n    /// /\n\n    if (!Flac.isReady()) {\n      Flac.onready = function () {\n        setTimeout(() => {\n          initFlac();\n        }, 0);\n      };\n    } else {\n      initFlac();\n    }\n  }\n\n  // HELPER: actually encode PCM data to Flac\n  function doEncodeFlac(audioData) {\n    const bufLength = audioData.length;\n    const bufferI32 = new Uint32Array(bufLength);\n    const view = new DataView(bufferI32.buffer);\n    const volume = 1;\n    let index = 0;\n    for (let i = 0; i < bufLength; i += 1) {\n      view.setInt32(index, (audioData[i] * (0x7FFF * volume)), true);\n      index += 4;\n    }\n\n    const flacReturn = Flac.FLAC__stream_encoder_process_interleaved(\n      flacEncoder, bufferI32, bufferI32.length / CHANNELS,\n    );\n    if (flacReturn != true) {\n      console.log(`Error: encode_buffer_pcm_as_flac returned false. ${flacReturn}`);\n    }\n  }\n\n  // HELPER: handle incoming PCM audio data for Flac encoding:\n  function encodeFlac(audioData) {\n    if (!Flac.isReady()) {\n      // if Flac is not ready yet: buffer the audio\n      wavBuffers.push(audioData);\n      console.info('buffered audio data for Flac encdoing');\n    } else {\n      if (wavBuffers.length > 0) {\n        // if there is buffered audio: encode buffered first (and clear buffer)\n\n        const len = wavBuffers.length;\n        const buffered = wavBuffers.splice(0, len);\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i < len; ++i) {\n          doEncodeFlac(buffered[i]);\n        }\n      }\n\n      doEncodeFlac(audioData);\n    }\n  }\n\n  function mergeBuffersUint8(channelBuffer, recordingLength) {\n    const result = new Uint8Array(recordingLength);\n    let offset = 0;\n    const lng = channelBuffer.length;\n    for (let i = 0; i < lng; i += 1) {\n      const buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n    return result;\n  }\n\n  function exportFlacFile(recBuffers, recLength) {\n    // convert buffers into one single buffer\n    const samples = mergeBuffersUint8(recBuffers, recLength);\n\n    // var audioBlob = new Blob([samples], { type: type });\n    const theBlob = new Blob([samples], { type: 'audio/flac' });\n    return theBlob;\n  }\n\n  /*\n   * clear recording buffers\n   */\n  function clear() {\n    flacBuffers.splice(0, flacBuffers.length);\n    flacLength = 0;\n    wavBuffers.splice(0, wavBuffers.length);\n  }\n\n  this.onmessage = function onmessage(e) {\n    if (e.data[0] === 'init') {\n      init(e.data[1]);\n    } else if (e.data[0] === 'encode') {\n      encodeFlac(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      let data;\n      if (!Flac.isReady()) {\n        console.error('Flac was not initialized: could not encode data!');\n      } else {\n        flacOk &= Flac.FLAC__stream_encoder_finish(flacEncoder);\n        console.log(`flac finish: ${flacOk}`);// DEBUG\n        data = exportFlacFile(flacBuffers, flacLength);\n\n        Flac.FLAC__stream_encoder_delete(flacEncoder);\n      }\n\n      clear();\n\n      postMessage(data);\n      INIT = false;\n    }\n  };\n}\n","/* eslint-disable max-len */\n/* eslint-disable consistent-return */\n/* eslint-disable no-underscore-dangle */\n// Vendor Library https://github.com/mogwai/pwa-audio-recorder/tree/master\n\nimport EncoderWav from './encoder-wav-worker';\nimport EncoderMp3 from './encoder-mp3-worker';\nimport EncoderFlac from './encoder-flac-worker';\n// import EncoderOgg from './encoder-ogg-worker';\n\nexport default class RecorderService {\n  constructor(config) {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n    this.em = document.createDocumentFragment();\n\n    this.state = 'inactive';\n\n    this.chunks = [];\n    this.chunkType = '';\n\n    this.encoderMimeType = 'audio/wav';\n\n    this.config = {\n      broadcastAudioProcessEvents: config.broadcastAudioProcessEvents !== undefined ? config.broadcastAudioProcessEvents : false,\n      createAnalyserNode: config.createAnalyserNode !== undefined ? config.createAnalyserNode : false,\n      createDynamicsCompressorNode: config.createDynamicsCompressorNode !== undefined ? config.createDynamicsCompressorNode : false,\n      forceScriptProcessor: config.forceScriptProcessor !== undefined ? config.forceScriptProcessor : false,\n      manualEncoderId: config.manualEncoderId !== undefined ? config.manualEncoderId : 'wav',\n      micGain: config.micGain !== undefined ? config.micGain : 1.0,\n      processorBufferSize: config.processorBufferSize !== undefined ? config.processorBufferSize : 2048,\n      stopTracksAndCloseCtxWhenFinished: config.stopTracksAndCloseCtxWhenFinished !== undefined ? config.stopTracksAndCloseCtxWhenFinished : true,\n      usingMediaRecorder: config.usingMediaRecorder !== undefined ? config.usingMediaRecorder : typeof window.MediaRecorder !== 'undefined',\n      enableEchoCancellation: config.enableEchoCancellation !== undefined ? config.enableEchoCancellation : true,\n      sampleRate: config.sampleRate !== undefined ? config.sampleRate : 44100,\n      onRecording: config.onRecording,\n      onAudioPress: config.onAudioPress,\n    };\n\n    if (config.onRecording) {\n      this.recordingFn = evt => config.onRecording(evt);\n      this.em.addEventListener('recording', this.recordingFn);\n    }\n    if (config.onAudioProcesss) {\n      this.onAudioProcessFn = evt => config.onAudioProcesss(evt);\n      this.em.addEventListener('onaudioprocess', this.onAudioProcessFn);\n    }\n  }\n\n  cleanup = () => {\n    if (this.config.onRecording) {\n      this.em.removeEventListener('recording', this.recordingFn);\n    }\n    if (this.config.onAudioProcesss) {\n      this.em.removeEventListener('onaudioprocess', this.onAudioProcessFn);\n    }\n  };\n\n  createWorker = fn => {\n    const js = fn\n      .toString()\n      .replace(/^function\\s*\\(\\)\\s*{/, '')\n      .replace(/}$/, '');\n    const blob = new Blob([js]);\n    return new Worker(URL.createObjectURL(blob));\n  };\n\n  startRecording = timeslice => {\n    if (this.state !== 'inactive') {\n      return;\n    }\n\n    // This is the case on ios/chrome, when clicking links from within ios/slack (sometimes), etc.\n    if (\n      !navigator\n      || !navigator.mediaDevices\n      || !navigator.mediaDevices.getUserMedia\n    ) {\n      // alert('Missing support for navigator.mediaDevices.getUserMedia'); // temp: helps when testing for strange issues on ios/safari\n      return;\n    }\n\n    this.audioCtx = new AudioContext({\n      sampleRate: this.config.sampleRate,\n    });\n    this.micGainNode = this.audioCtx.createGain();\n    this.outputGainNode = this.audioCtx.createGain();\n\n    if (this.config.createDynamicsCompressorNode) {\n      this.dynamicsCompressorNode = this.audioCtx.createDynamicsCompressor();\n    }\n\n    if (this.config.createAnalyserNode) {\n      this.analyserNode = this.audioCtx.createAnalyser();\n    }\n\n    // If not using MediaRecorder(i.e. safari and edge), then a script processor is required. It's optional\n    // on browsers using MediaRecorder and is only useful if wanting to do custom analysis or manipulation of\n    // recorded audio data.\n    if (\n      this.config.forceScriptProcessor\n      || this.config.broadcastAudioProcessEvents\n      || !this.config.usingMediaRecorder\n    ) {\n      this.processorNode = this.audioCtx.createScriptProcessor(\n        this.config.processorBufferSize,\n        1,\n        1,\n      ); // TODO: Get the number of channels from mic\n    }\n\n    // Create stream destination on chrome/firefox because, AFAICT, we have no other way of feeding audio graph output\n    // in to MediaRecorderSafari/Edge don't have this method as of 2018-04.\n    if (this.audioCtx.createMediaStreamDestination) {\n      this.destinationNode = this.audioCtx.createMediaStreamDestination();\n    } else {\n      this.destinationNode = this.audioCtx.destination;\n    }\n\n    // Create web worker for doing the encoding\n    if (!this.config.usingMediaRecorder) {\n      if (this.config.manualEncoderId === 'mp3') {\n        this.encoderWorker = this.createWorker(EncoderMp3);\n        const baseUrl = process.env.PUBLIC_URL || 'https://virufy.org/study';\n        this.encoderWorker.postMessage([\n          'init',\n          { baseUrl, sampleRate: this.audioCtx.sampleRate },\n        ]);\n        this.encoderMimeType = 'audio/mpeg';\n      } else if (this.config.manualEncoderId === 'flac') {\n        this.encoderWorker = this.createWorker(EncoderFlac);\n        this.encoderWorker.postMessage([\n          'init',\n          { sampleRate: this.audioCtx.sampleRate },\n        ]);\n        this.encoderMimeType = 'audio/flac';\n      } else {\n        this.encoderWorker = this.createWorker(EncoderWav);\n        this.encoderMimeType = 'audio/wav';\n      }\n      this.encoderWorker.addEventListener('message', e => {\n        const event = new Event('dataavailable');\n        if (this.config.manualEncoderId === 'ogg' || this.config.manualEncoderId === 'flac') {\n          event.data = e.data;\n        } else {\n          event.data = new Blob(e.data, { type: this.encoderMimeType });\n        }\n        this._onDataAvailable(event);\n      });\n    }\n\n    // Setup media constraints\n    const userMediaConstraints = {\n      audio: {\n        echoCancellation: this.config.enableEchoCancellation,\n      },\n    };\n    if (this.config.deviceId) {\n      userMediaConstraints.audio.deviceId = this.config.deviceId;\n    }\n\n    // This will prompt user for permission if needed\n    return navigator.mediaDevices\n      .getUserMedia(userMediaConstraints)\n      .then(stream => {\n        this._startRecordingWithStream(stream, timeslice);\n      })\n      .catch(error => {\n        // alert(`Error with getUserMedia: ${error.message}`); // temp: helps when testing for strange issues on ios/safari\n        console.log(error);\n      });\n  };\n\n  setMicGain = newGain => {\n    this.config.micGain = newGain;\n    if (this.audioCtx && this.micGainNode) {\n      this.micGainNode.gain.setValueAtTime(newGain, this.audioCtx.currentTime);\n    }\n  };\n\n  _startRecordingWithStream = (stream, timeslice) => {\n    this.micAudioStream = stream;\n\n    this.inputStreamNode = this.audioCtx.createMediaStreamSource(\n      this.micAudioStream,\n    );\n    this.audioCtx = this.inputStreamNode.context;\n\n    // Kind-of a hack to allow hooking in to audioGraph inputStreamNode\n    if (this.onGraphSetupWithInputStream) {\n      this.onGraphSetupWithInputStream(this.inputStreamNode);\n    }\n\n    this.inputStreamNode.connect(this.micGainNode);\n    this.micGainNode.gain.setValueAtTime(\n      this.config.micGain,\n      this.audioCtx.currentTime,\n    );\n\n    let nextNode = this.micGainNode;\n    if (this.dynamicsCompressorNode) {\n      this.micGainNode.connect(this.dynamicsCompressorNode);\n      nextNode = this.dynamicsCompressorNode;\n    }\n\n    this.state = 'recording';\n\n    if (this.processorNode) {\n      nextNode.connect(this.processorNode);\n      this.processorNode.connect(this.outputGainNode);\n      this.processorNode.onaudioprocess = e => this._onAudioProcess(e);\n    } else {\n      nextNode.connect(this.outputGainNode);\n    }\n\n    if (this.analyserNode) {\n      // TODO: If we want the analyser node to receive the processorNode's output, this needs to be changed _and_\n      //       processor node needs to be modified to copy input to output. It currently doesn't because it's not\n      //       needed when doing manual encoding.\n      // this.processorNode.connect(this.analyserNode)\n      nextNode.connect(this.analyserNode);\n    }\n\n    this.outputGainNode.connect(this.destinationNode);\n\n    if (this.config.usingMediaRecorder) {\n      this.mediaRecorder = new MediaRecorder(this.destinationNode.stream, { mimeType: this.encoderMimeType });\n      this.mediaRecorder.addEventListener('dataavailable', evt => this._onDataAvailable(evt));\n      this.mediaRecorder.addEventListener('error', evt => this._onError(evt));\n\n      this.mediaRecorder.start(timeslice);\n    } else {\n      // Output gain to zero to prevent feedback. Seems to matter only on Edge, though seems like should matter\n      // on iOS too.  Matters on chrome when connecting graph to directly to audioCtx.destination, but we are\n      // not able to do that when using MediaRecorder.\n      this.outputGainNode.gain.setValueAtTime(0, this.audioCtx.currentTime);\n      // this.outputGainNode.gain.value = 0\n\n      // Todo: Note that time slicing with manual wav encoderWav won't work. To allow it would require rewriting the encoderWav\n      // to assemble all chunks at end instead of adding header to each chunk.\n      if (timeslice) {\n        console.log(\n          'Time slicing without MediaRecorder is not yet supported. The resulting recording will not be playable.',\n        );\n        this.slicing = setInterval(function anon() {\n          if (this.state === 'recording') {\n            this.encoderWorker.postMessage(['dump', this.context.sampleRate]);\n          }\n        }, timeslice);\n      }\n    }\n  };\n\n  _onAudioProcess = e => {\n    // console.log('onaudioprocess', e)\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // console.log(this.micAudioStream)\n    // console.log(this.audioCtx)\n    // console.log(this.micAudioStream.getTracks().forEach((track) => console.log(track)))\n\n    // this.onAudioEm.dispatch(new Event('onaudioprocess', {inputBuffer:inputBuffer,outputBuffer:outputBuffer}))\n\n    if (this.config.broadcastAudioProcessEvents) {\n      this.em.dispatchEvent(\n        new CustomEvent('onaudioprocess', {\n          detail: {\n            inputBuffer: e.inputBuffer,\n            outputBuffer: e.outputBuffer,\n          },\n        }),\n      );\n    }\n\n    // // Example handling:\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // // Each channel (usually only one)\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\n    //   let inputData = inputBuffer.getChannelData(channel)\n    //   let outputData = outputBuffer.getChannelData(channel)\n    //\n    //   // Each sample\n    //   for (let sample = 0; sample < inputBuffer.length; sample++) {\n    //     // Make output equal to the same as the input (thus processor is doing nothing at this time)\n    //     outputData[sample] = inputData[sample]\n    //   }\n    // }\n\n    // When manually encoding (safari/edge), there's no reason to copy data to output buffer.  We set the output\n    // gain to 0 anyways (which is required on Edge if we did copy data to output). However, if using a MediaRecorder\n    // and a processor (all other browsers), then it would be required to copy the data otherwise the graph would\n    // generate no data for the MediaRecorder to consume.\n    // if (this.forceScriptProcessor) {\n\n    // // Copy input to output\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // // This doesn't work on iOS/Safari. Guessing it doesn't have copyToChannel support, but haven't verified.\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\n    //   outputBuffer.copyToChannel(inputBuffer.getChannelData(channel), channel)\n    // }\n\n    // Safari and Edge require manual encoding via web worker. Single channel only for now.\n    // Example stereo encoderWav: https://github.com/MicrosoftEdge/Demos/blob/master/microphone/scripts/recorderworker.js\n    if (!this.config.usingMediaRecorder) {\n      if (this.state === 'recording') {\n        if (this.config.broadcastAudioProcessEvents) {\n          this.encoderWorker.postMessage([\n            'encode',\n            e.outputBuffer.getChannelData(0),\n          ]);\n        } else {\n          this.encoderWorker.postMessage([\n            'encode',\n            e.inputBuffer.getChannelData(0),\n          ]);\n        }\n      }\n    }\n  };\n\n  stopRecording = () => {\n    if (this.state === 'inactive') {\n      return;\n    }\n    if (this.config.usingMediaRecorder) {\n      this.state = 'inactive';\n      this.mediaRecorder.stop();\n    } else {\n      this.state = 'inactive';\n      this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate]);\n      clearInterval(this.slicing);\n\n      // TODO: There should be a more robust way to handle this\n      // Without something like this, I think  the last recorded sample could be lost due to timing\n      // setTimeout(() => {\n      //   this.state = 'inactive'\n      //   this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate])\n      // }, 100)\n    }\n  };\n\n  _onDataAvailable = evt => {\n    // console.log('state', this.mediaRecorder.state)\n    // console.log('evt.data', evt.data)\n\n    this.chunks.push(evt.data);\n    this.chunkType = evt.data.type;\n\n    if (this.state !== 'inactive') {\n      return;\n    }\n\n    const blob = new Blob(this.chunks, { type: this.chunkType });\n    const blobUrl = URL.createObjectURL(blob);\n    const recording = {\n      ts: new Date().getTime(),\n      blobUrl,\n      mimeType: blob.type,\n      size: blob.size,\n    };\n\n    this.chunks = [];\n    this.chunkType = null;\n\n    if (this.destinationNode) {\n      this.destinationNode.disconnect();\n      this.destinationNode = null;\n    }\n    if (this.outputGainNode) {\n      this.outputGainNode.disconnect();\n      this.outputGainNode = null;\n    }\n    if (this.analyserNode) {\n      this.analyserNode.disconnect();\n      this.analyserNode = null;\n    }\n    if (this.processorNode) {\n      this.processorNode.disconnect();\n      this.processorNode = null;\n    }\n    if (this.encoderWorker) {\n      this.encoderWorker.postMessage(['close']);\n      this.encoderWorker = null;\n    }\n    if (this.dynamicsCompressorNode) {\n      this.dynamicsCompressorNode.disconnect();\n      this.dynamicsCompressorNode = null;\n    }\n    if (this.micGainNode) {\n      this.micGainNode.disconnect();\n      this.micGainNode = null;\n    }\n    if (this.inputStreamNode) {\n      this.inputStreamNode.disconnect();\n      this.inputStreamNode = null;\n    }\n\n    if (this.config.stopTracksAndCloseCtxWhenFinished) {\n      // This removes the red bar in iOS/Safari\n      this.micAudioStream.getTracks().forEach(track => track.stop());\n      this.micAudioStream = null;\n\n      this.audioCtx.close();\n      this.audioCtx = null;\n    }\n\n    this.em.dispatchEvent(\n      new CustomEvent('recording', { detail: { recording } }),\n    );\n  };\n\n  _onError = evt => {\n    console.log('error', evt);\n    this.em.dispatchEvent(new Event('error'));\n    // alert(`error:${evt}`); // for debugging purposes\n  };\n}\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const MicRecorderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const MicButtonsContainer = styled.div`\n  display:flex;\n  justify-content: space-between;\n  width: 144px;\n  margin: auto;\n`;\n\nexport const MicButtonWithText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MicNote = styled.p`\n  font-size: 14px;\n  color: ${colors.lightDarkGray};\n  margin-top: 8px;\n  margin-bottom: 0px;\n`;\nexport const MicRecorderButton = styled.button<{ disabled?: boolean; opacity?: boolean}>`\n  background-color: ${colors.purple};\n  width: 56px;\n  height: 56px;\n  position: relative;\n  outline: none !important;\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  transition: background-color 0.25s;\n  opacity: ${props => (props.disabled || props.opacity ? '0.5' : '1')};\n\n  @supports not (-webkit-touch-callout: none) {\n    /* CSS for other than iOS devices */\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  &:active {\n    background-color: ${colors.purple};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: transparent;\n    z-index: 1;\n    border-radius: 50%;\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    width: 66px;\n    height: 66px;\n  }\n`;\n\nexport const MicRecorderImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: opacity 0.25s;\n`;\n\nexport const MicRecorderStartImage = styled(MicRecorderImage)`\n  width: 27px;\n  height: 27px;\n`;\n\nexport const MicRecorderStopImage = styled(MicRecorderImage)`\n  width: 15px;\n  height: 15px;\n`;\n\nexport const MicRecorderTimerContainer = styled.div`\n  width: 70px;\n  height: 41px;\n  font-size: 1.25rem;\n  color: ${colors.purple};\n  font-weight: bold;\n  font-family: 'Source Sans Pro';\n  border: 1px solid ${colors.purple};\n  border-radius: 15px;\n  display: flex; \n  align-items: center; \n  justify-content: center; \n  margin-bottom: 28px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    font-size: 1.75rem;\n    margin-top: 22px;\n  }\n`;\n\nexport const MicRecorderTimerReleaseTextContainer = styled.div`\n  font-size: 16px;\n  line-height: 20px;\n  color: ${colors.red};\n  font-family: 'Source Sans Pro';\n  display: flex; \n  margin-left: 20px;\n  margin-top:10px;\n`;\n\nexport const MicRecorderTextP = styled.p<{ show?: boolean }>`\n  visibility: ${props => (props.show ? 'flex' : 'hidden')};\n`;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport Timer from 'react-compound-timer';\nimport { useTranslation } from 'react-i18next';\n\n// Sentry\nimport * as Sentry from '@sentry/react';\n\n// Utils\nimport RecorderService from 'helper/audio/RecorderService';\nimport FileHelper from 'helper/fileHelper';\nimport { getDuration } from 'helper/getDuration';\n\n// Modals\nimport RecordErrorModal from 'modals/RecordErrorModal';\n\n// Images\nimport StartSVG from 'assets/icons/start.svg';\nimport StopSVG from 'assets/icons/stop.svg';\n\n// Styles\nimport {\n  MicRecorderContainer,\n  MicRecorderButton,\n  MicRecorderStartImage,\n  MicRecorderStopImage,\n  MicRecorderTimerContainer,\n  MicRecorderTimerReleaseTextContainer,\n  MicRecorderTextP,\n  MicButtonsContainer,\n  MicButtonWithText,\n  MicNote,\n} from './style';\n\ninterface MicRecorderProps {\n  className?: string;\n  maxTimeInSeconds?: number;\n  minTimeInSeconds?: number;\n  onNewRecord: (file: File, humanReadableSize: string) => void;\n  delay?: number;\n  recordingFile: any;\n  isShortAudioCollection?: boolean;\n}\n\nconst baseConfig = {\n  usingMediaRecorder: false,\n  sampleRate: 48000,\n  manualEncoderId: 'wav', // wav / mp3 / flac\n  processorBufferSize: 2048, // 4096 flac / 2048 wav\n};\nexport interface RecorderServiceType {\n  config: {\n    broadcastAudioProcessEvents: boolean; // default: false\n    createAnalyserNode: boolean; // default: false\n    createDynamicsCompressorNode: boolean; // default: false\n    forceScriptProcessor: false; // default: false\n    manualEncoderId: string; // default: 'wav'\n    micGain: number; // default: 1.0\n    processorBufferSize: number; // default: 2048\n    stopTracksAndCloseCtxWhenFinished: boolean; // default: true\n    usingMediaRecorder: boolean; // default: typeof window.MediaRecorder !== 'undefined'\n    enableEchoCancellation: boolean; // default: true\n    sampleRate: number; // default: 44100\n  };\n  em: DocumentFragment;\n  startRecording: (timeslice?: number) => Promise<void>;\n  stopRecording: () => void;\n  cleanup: () => void;\n}\n\nconst MicRecorder = ({\n  className = '',\n  maxTimeInSeconds = 30, // 30 segs\n  minTimeInSeconds = 5, // 5 segs\n  onNewRecord,\n  delay = 500, // 500ms\n  recordingFile,\n  isShortAudioCollection,\n}: MicRecorderProps) => {\n  // Hooks\n  const { t } = useTranslation();\n\n  // Refs\n  const recordingService = React.useRef<RecorderServiceType>();\n  const audioSamples = React.useRef<number>(0);\n  const timerRef = React.useRef<any>();\n  const timeout = React.useRef<number>();\n  const target = React.useRef<HTMLButtonElement>();\n\n  // States\n  const [micAllowed, setMicAllowed] = React.useState<boolean>(true);\n  const [recordingInProgress, setRecordingInProgress] = React.useState<boolean>();\n  const [showReleaseText, setShowReleaseText] = React.useState<boolean>(false);\n  const [showShortRecordingText, setShowShortRecordingText] = React.useState<boolean>(false);\n  const [longPressTriggered, setLongPressTriggered] = React.useState<boolean>(false);\n\n  // Handlers\n  const onAudioProcess = React.useCallback((e: any) => {\n    audioSamples.current += 1;\n    const { inputBuffer, outputBuffer } = e.detail;\n    for (let channel = 0; channel < outputBuffer.numberOfChannels; channel += 1) {\n      const inputData = inputBuffer.getChannelData(channel);\n      const outputData = outputBuffer.getChannelData(channel);\n      // Each sample\n      for (let sample = 0; sample < inputBuffer.length; sample += 1) {\n        outputData[sample] = inputData[sample];\n      }\n    }\n  }, []);\n\n  const onNewRecording = React.useCallback(async (e: any) => {\n    const { detail } = e;\n    const { recording } = detail;\n    const blob = await fetch(recording.blobUrl).then(r => r.blob());\n    const fileName = `Filename.${baseConfig.manualEncoderId}`;\n    const file = FileHelper.blobToFile(blob, fileName);\n    const humanReadableSize = FileHelper.sizeAsHuman(file.size, true);\n\n    onNewRecord(file, humanReadableSize);\n  }, [onNewRecord]);\n\n  // Effects\n  React.useEffect(() => {\n    recordingService.current = new RecorderService({\n      ...baseConfig,\n      sampleRate: isShortAudioCollection ? 16000 : baseConfig.sampleRate,\n      onRecording: onNewRecording,\n      onAudioProcesss: onAudioProcess,\n    }) as RecorderServiceType;\n\n    const userMediaConstraints = {\n      audio: {\n        echoCancellation: recordingService.current.config.enableEchoCancellation,\n      },\n    };\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\n      .then(() => {\n        setMicAllowed(true);\n      })\n      .catch(err => {\n        setMicAllowed(false);\n        Sentry.captureException(err);\n      });\n\n    if (recordingFile) {\n      const file = recordingFile as File;\n      if (file.size) {\n        const audio = new Audio(URL.createObjectURL(file));\n        audio.defaultMuted = true;\n        audio.muted = true;\n        audio.load();\n        const listenerFn = async () => {\n          audio.removeEventListener('loadedmetadata', listenerFn);\n          getDuration(audio, true).then(result => {\n            timerRef.current?.setTime(result * 1000);\n          });\n        };\n        audio.addEventListener('loadedmetadata', listenerFn);\n      }\n    }\n\n    return () => {\n      if (recordingService.current) {\n        recordingService.current.cleanup();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handlers\n  const handleStartRecording = React.useCallback(() => {\n    if (recordingService.current) {\n      audioSamples.current = 0;\n      recordingService.current\n        .startRecording()\n        .then(() => {\n          setRecordingInProgress(true);\n          setShowShortRecordingText(false);\n          if (timerRef.current) {\n            timerRef.current.reset();\n            timerRef.current?.setTime(0);\n            timerRef.current.start();\n          }\n        })\n        .catch((error: any) => console.error('ERROR', error));\n    }\n  }, []);\n\n  const handleStopRecording = React.useCallback(() => {\n    if (recordingService.current) {\n      recordingService.current.stopRecording();\n      setRecordingInProgress(false);\n      if (timerRef.current) {\n        if (timerRef.current.getTime() / 1000 < minTimeInSeconds) {\n          setShowShortRecordingText(true);\n        }\n        timerRef.current.stop();\n      }\n    }\n  }, [minTimeInSeconds]);\n\n  const handleFormatValue = React.useCallback((value: number) => (value < 10 ? `0${value}` : value), []);\n\n  const preventDefault = (event: any) => {\n    if (!('touches' in event)) event.preventDefault();\n  };\n\n  const handleStartLongPress = React.useCallback(\n    event => {\n      if (event.target) {\n        event.target.addEventListener('touchend', preventDefault, {\n          passive: false,\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        setShowReleaseText(true);\n        setLongPressTriggered(true);\n        setShowShortRecordingText(false);\n      }, delay);\n    },\n    [delay],\n  );\n\n  const handleEndLongPress = React.useCallback(() => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n    if (longPressTriggered) {\n      setShowReleaseText(false);\n    }\n    setLongPressTriggered(false);\n    if (target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  },\n  [longPressTriggered]);\n\n  return (\n    <MicRecorderContainer className={className}>\n      <MicRecorderTimerReleaseTextContainer>\n        {!showShortRecordingText\n          && (\n            <MicRecorderTextP\n              show={showReleaseText}\n            >\n              {recordingInProgress ? t('recordingsIntroduction:releaseButtonStop') : t('recordingsIntroduction:releaseButtonStart')}\n            </MicRecorderTextP>\n          )}\n        <RecordErrorModal\n          isOpen={showShortRecordingText}\n          modalTitle=\"Oops.\"\n          onConfirm={handleStartRecording}\n        >\n          {t('recordingsIntroduction:shortRecording', { seconds: minTimeInSeconds })}\n        </RecordErrorModal>\n      </MicRecorderTimerReleaseTextContainer>\n      <MicRecorderTimerContainer>\n        <Timer\n          ref={timerRef}\n          startImmediately={false}\n          checkpoints={[\n            {\n              time: maxTimeInSeconds * 1000,\n              callback: handleStopRecording,\n            },\n          ]}\n        >\n          <Timer.Minutes />\n          :\n          <Timer.Seconds formatValue={handleFormatValue} />\n        </Timer>\n      </MicRecorderTimerContainer>\n      <MicButtonsContainer>\n        <MicButtonWithText>\n          <MicRecorderButton\n            disabled={!micAllowed || recordingInProgress}\n            onClick={handleStartRecording}\n            onMouseDown={handleStartLongPress}\n            onMouseUp={handleEndLongPress}\n            onTouchStart={handleStartLongPress}\n            onTouchEnd={handleEndLongPress}\n            onMouseLeave={handleEndLongPress}\n          >\n            <MicRecorderStartImage\n              src={StartSVG}\n              alt=\"Start\"\n            />\n          </MicRecorderButton>\n          <MicNote>{t('recordingsRecord:record')}</MicNote>\n        </MicButtonWithText>\n        <MicButtonWithText>\n          <MicRecorderButton\n            disabled={!micAllowed || !recordingInProgress}\n            onClick={handleStopRecording}\n            onMouseDown={handleStartLongPress}\n            onMouseUp={handleEndLongPress}\n            onTouchStart={handleStartLongPress}\n            onTouchEnd={handleEndLongPress}\n            onMouseLeave={handleEndLongPress}\n          >\n            <MicRecorderStopImage\n              src={StopSVG}\n              alt=\"Stop\"\n            />\n          </MicRecorderButton>\n          <MicNote>{t('recordingsRecord:recordStop')}</MicNote>\n        </MicButtonWithText>\n      </MicButtonsContainer>\n    </MicRecorderContainer>\n  );\n};\n\nexport default React.memo(MicRecorder);\n","import React from 'react';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport Yup from 'utils/yup';\n\n// Components\nimport MicRecorder from 'components/MicRecorder';\nimport WizardButtons from 'components/WizardButtons';\n\n// Images\nimport UploadSVG from 'assets/icons/upload.svg';\n\n// Styles\nimport {\n  MainContainer,\n  UploadContainer,\n  UploadImage,\n  UploadText,\n  MicContainer,\n} from './style';\n\nconst audioMaxSizeInMb = 5;\nconst audioMinLength: CommonJSON<number> = {\n  recordYourBreath: 5,\n  recordYourSpeech: 5,\n  recordYourCough: 3,\n}; // in seconds\n\nconst schema = Yup.object({\n  recordingFile: Yup.mixed()\n    .required('ERROR.FILE_REQUIRED')\n    // @ts-ignore\n    .validateAudioSize(audioMaxSizeInMb)\n    // @ts-ignore\n    .when('$_currentLogic', (value: string, _schema: Yup.MixedSchema) => _schema.validateAudioLength(audioMinLength[value] || 5)),\n}).defined();\n\ntype RecordType = Yup.InferType<typeof schema>;\n\ninterface RecordProps {\n  // isCoughLogic: boolean,\n  onNext: (values: RecordType) => void;\n  onManualUpload: () => void;\n  defaultValues: RecordType;\n  currentLogic: string;\n  action:any;\n  isShortAudioCollection?: boolean;\n}\n\nconst Record = ({\n  onNext,\n  onManualUpload,\n  defaultValues,\n  currentLogic,\n  action,\n  isShortAudioCollection,\n}: RecordProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo:\n      document && (document.getElementById('wizard-buttons') as HTMLDivElement),\n  });\n  const {\n    handleSubmit, control, getValues, formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues,\n    context: {\n      _currentLogic: currentLogic,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const { t } = useTranslation();\n\n  const { isValid } = formState;\n\n  // Refs\n  const micKey = React.useRef<number>(1);\n\n  const onManualUploadWithFile = () => {\n    action({\n      [currentLogic]: {\n        recordingFile: getValues('recordingFile') || null,\n        uploadedFile: null,\n      },\n    });\n    onManualUpload?.();\n  };\n\n  return (\n    <>\n      <MainContainer>\n        <MicContainer>\n          <Controller\n            control={control}\n            name=\"recordingFile\"\n            render={({ onChange }) => (\n              <MicRecorder\n                key={micKey.current} // On delete, easy re-mount a new mic recorder\n                onNewRecord={onChange}\n                recordingFile={defaultValues?.recordingFile}\n                minTimeInSeconds={audioMinLength[currentLogic]}\n                isShortAudioCollection={isShortAudioCollection}\n              />\n            )}\n          />\n        </MicContainer>\n\n        <Portal>\n          <WizardButtons\n            invert\n            leftLabel={t('recordingsRecord:next')}\n            leftDisabled={!isValid}\n            leftHandler={handleSubmit(onNext)}\n          />\n          <UploadContainer onClick={onManualUploadWithFile}>\n            <UploadImage src={UploadSVG} />\n            <UploadText>{t('recordingsRecord:upload')}</UploadText>\n          </UploadContainer>\n        </Portal>\n\n      </MainContainer>\n    </>\n  );\n};\n\nexport default React.memo(Record);\n","import styled from 'styled-components';\n\nexport const ModalBody = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    margin: auto;\n`;\n\nexport const ModalTitle = styled.div`\n  font-family: 'Biko';\n  font-size: 30px;\n  line-height: 30px;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const ModalContent = styled.div`\n  font-family: 'Source Sans Pro';\n  text-align: center;\n  line-height: 25px;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { PropsWithChildren } from 'react';\nimport Modal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'components/Button';\n\n// Style\nimport {\n  ModalBody, ModalTitle, ModalContent,\n} from './style';\n\nexport interface ConfirmationModalProps {\n  isOpen: boolean;\n  modalTitle: string;\n  onConfirm?: () => void;\n}\n\nModal.setAppElement('#root');\n\nconst RecordErrorModal = React.memo(({\n  modalTitle,\n  children,\n  onConfirm,\n  ...props\n}: PropsWithChildren<ConfirmationModalProps>) => {\n  // Handlers\n\n  const { t } = useTranslation();\n\n  const customStyles = {\n    content: {\n      height: '281px',\n      maxWidth: '348px',\n      margin: 'auto',\n      borderRadius: '10px',\n      border: 'none',\n    },\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={customStyles}\n    >\n      <ModalBody className=\"ModalBody\">\n        <ModalTitle>{modalTitle}</ModalTitle>\n        <ModalContent>{children}</ModalContent>\n        <Button onClick={onConfirm} dark>\n          {t('recordingsIntroduction:retryButton', 'Retry')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  );\n});\n\nexport default RecordErrorModal;\n","import styled from 'styled-components';\nimport { BlackText } from 'components/Texts';\nimport { colors } from 'theme';\n\nimport StopSVG from 'assets/icons/stop.svg';\n\nexport const MainContainer = styled.div`\n  padding: 40px 0px;\n`;\n\nexport const Text = styled(BlackText)`\n  color: ${props => props.theme.colors.darkBlack};\n  margin-bottom: 2px;\n  text-align: left;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    margin: 0 auto;\n    font-size: 16px;\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    @media (orientation: portrait) {\n      margin-bottom: 248px;\n    }\n\n    @media (orientation: landscape) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const MicContainer = styled.div``;\n\nexport const UploadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 20px 12px;\n  width: fit-content;\n  margin: 0 auto;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    padding: 22px;\n  }\n`;\n\nexport const UploadImage = styled.img`\n  cursor: pointer;\n  width: 13px;\n  height: 12px;\n  margin-right: 7px;\n`;\n\nexport const UploadText = styled.div`\n  cursor: pointer;\n  font-family: Source Sans Pro;\n  font-weight: bold;\n  font-size: 0.75rem;\n  line-height: 24px;\n  color: ${colors.darkBlack};\n`;\n\nexport const StopImg = styled.img.attrs(() => ({ src: StopSVG }))`\n  display: inline;\n  height: 10px;\n  margin: 0px 2px 4px;\n`;\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\n\nconst sizeAsHuman = (bytes: number, si?: boolean) => {\n  const thresh = si ? 1000 : 1024;\n  if (Math.abs(bytes) < thresh) {\n    return `${bytes} B`;\n  }\n  const units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n  return `${bytes.toFixed(1)} ${units[u]}`;\n};\n\nconst blobToFile = (theBlob: Blob, fileName:string): File => {\n  const b: any = theBlob;\n  // A Blob() is almost a File() - it's just missing the two properties below which we will add\n  b.lastModifiedDate = new Date();\n  b.name = fileName;\n\n  // Cast to a File() type\n  return theBlob as File;\n};\n\nexport default {\n  sizeAsHuman,\n  blobToFile,\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Timer_1 = __importDefault(require(\"./components/Timer/Timer\"));\nvar getTimeParts_1 = __importDefault(require(\"./lib/helpers/getTimeParts\"));\nexports.getTimeParts = getTimeParts_1.default;\nvar useTimer_1 = require(\"./hook/useTimer\");\nexports.useTimer = useTimer_1.useTimer;\nexports.default = Timer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar TimerModel_1 = require(\"../../lib/models/TimerModel\");\nvar TimerContext = react_1.default.createContext({\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0,\n    d: 0,\n    formatValue: function (value) { return String(value); },\n});\nvar TimerValue = function (_a) {\n    var unit = _a.unit, formatValue = _a.formatValue;\n    return (react_1.default.createElement(Timer.Consumer, null, function (props) {\n        var format = formatValue || props.formatValue;\n        return format(props[unit]) || null;\n    }));\n};\nvar Milliseconds = function (props) { return (react_1.default.createElement(TimerValue, __assign({ unit: \"ms\" }, props))); };\nvar Seconds = function (props) { return (react_1.default.createElement(TimerValue, __assign({ unit: \"s\" }, props))); };\nvar Minutes = function (props) { return (react_1.default.createElement(TimerValue, __assign({ unit: \"m\" }, props))); };\nvar Hours = function (props) { return (react_1.default.createElement(TimerValue, __assign({ unit: \"h\" }, props))); };\nvar Days = function (props) { return (react_1.default.createElement(TimerValue, __assign({ unit: \"d\" }, props))); };\nvar Timer = /** @class */ (function (_super) {\n    __extends(Timer, _super);\n    function Timer(props) {\n        var _this = _super.call(this, props) || this;\n        var _a = _this.props, initialTime = _a.initialTime, direction = _a.direction, timeToUpdate = _a.timeToUpdate, lastUnit = _a.lastUnit, checkpoints = _a.checkpoints;\n        _this.timer = new TimerModel_1.TimerModel({\n            initialTime: initialTime,\n            direction: direction,\n            timeToUpdate: timeToUpdate,\n            lastUnit: lastUnit,\n            checkpoints: checkpoints,\n            onChange: _this.setState.bind(_this),\n        });\n        _this.state = __assign({}, _this.timer.timeParts, { timerState: 'INITED' });\n        _this.start = _this.start.bind(_this);\n        _this.pause = _this.pause.bind(_this);\n        _this.resume = _this.resume.bind(_this);\n        _this.stop = _this.stop.bind(_this);\n        _this.reset = _this.reset.bind(_this);\n        _this.setTime = _this.setTime.bind(_this);\n        _this.getTime = _this.getTime.bind(_this);\n        _this.getTimerState = _this.getTimerState.bind(_this);\n        _this.setDirection = _this.setDirection.bind(_this);\n        _this.setCheckpoints = _this.setCheckpoints.bind(_this);\n        return _this;\n    }\n    Timer.getUI = function (children, renderProps) {\n        if (children === null) {\n            return null;\n        }\n        if (Array.isArray(children) || react_1.default.isValidElement(children)) {\n            return children;\n        }\n        if (children.prototype && children.prototype.isReactComponent) {\n            return react_1.default.createElement(children, renderProps);\n        }\n        if (typeof children === 'function') {\n            return children(renderProps);\n        }\n        throw new Error('Please use one of the supported APIs for children');\n    };\n    Timer.prototype.componentDidMount = function () {\n        var startImmediately = this.props.startImmediately;\n        startImmediately && this.timer.start();\n    };\n    Timer.prototype.componentWillUnmount = function () {\n        this.timer.stop();\n    };\n    Timer.prototype.render = function () {\n        var _a = this, start = _a.start, pause = _a.pause, resume = _a.resume, stop = _a.stop, reset = _a.reset, getTime = _a.getTime, getTimerState = _a.getTimerState, setTime = _a.setTime, setDirection = _a.setDirection, setCheckpoints = _a.setCheckpoints;\n        var _b = this.state, ms = _b.ms, s = _b.s, m = _b.m, h = _b.h, d = _b.d, timerState = _b.timerState;\n        var _c = this.props, formatValue = _c.formatValue, children = _c.children;\n        return (react_1.default.createElement(TimerContext.Provider, { value: { ms: ms, s: s, m: m, h: h, d: d, formatValue: formatValue } }, Timer.getUI(children, {\n            start: start,\n            resume: resume,\n            pause: pause,\n            stop: stop,\n            reset: reset,\n            getTime: getTime,\n            getTimerState: getTimerState,\n            setTime: setTime,\n            setDirection: setDirection,\n            setCheckpoints: setCheckpoints,\n            timerState: timerState,\n        })));\n    };\n    Timer.prototype.setTime = function (time) {\n        this.timer.setTime(time);\n    };\n    Timer.prototype.getTime = function () {\n        return this.timer.getTime();\n    };\n    Timer.prototype.getTimerState = function () {\n        return this.timer.state;\n    };\n    Timer.prototype.setDirection = function (direction) {\n        this.timer.setDirection(direction);\n    };\n    Timer.prototype.setCheckpoints = function (checkpoints) {\n        this.timer.setCheckpoints(checkpoints);\n    };\n    Timer.prototype.start = function () {\n        this.timer.start();\n        this.props.onStart();\n    };\n    Timer.prototype.stop = function () {\n        this.timer.stop();\n        this.props.onStop();\n    };\n    Timer.prototype.pause = function () {\n        this.timer.pause();\n        this.props.onPause();\n    };\n    Timer.prototype.reset = function () {\n        this.timer.reset();\n        this.props.onReset();\n    };\n    Timer.prototype.resume = function () {\n        this.timer.resume();\n        this.props.onResume();\n    };\n    Timer.Consumer = TimerContext.Consumer;\n    Timer.Milliseconds = Milliseconds;\n    Timer.Seconds = Seconds;\n    Timer.Minutes = Minutes;\n    Timer.Hours = Hours;\n    Timer.Days = Days;\n    Timer.defaultProps = {\n        timeToUpdate: 1000,\n        direction: 'forward',\n        initialTime: 0,\n        startImmediately: true,\n        lastUnit: 'd',\n        checkpoints: [],\n        children: null,\n        formatValue: function (value) { return String(value); },\n        onStart: function () { },\n        onResume: function () { },\n        onPause: function () { },\n        onStop: function () { },\n        onReset: function () { },\n    };\n    return Timer;\n}(react_1.default.PureComponent));\nexports.default = Timer;\n//# sourceMappingURL=Timer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction now() {\n    if (typeof window === 'undefined' || !('performance' in window)) {\n        return Date.now();\n    }\n    return performance.now();\n}\nexports.default = now;\n//# sourceMappingURL=now.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INITED = 'INITED';\nexports.PLAYING = 'PLAYING';\nexports.PAUSED = 'PAUSED';\nexports.STOPPED = 'STOPPED';\nvar TimerState = /** @class */ (function () {\n    function TimerState(onChangeStatus) {\n        var _this = this;\n        if (onChangeStatus === void 0) { onChangeStatus = function (obj) { }; }\n        this.state = exports.INITED;\n        this.onChange = function () { return onChangeStatus({ state: _this.state }); };\n        this.state = exports.INITED;\n    }\n    TimerState.prototype.getState = function () {\n        return this.state;\n    };\n    TimerState.prototype.setInited = function () {\n        if (this.state === exports.INITED) {\n            return false;\n        }\n        this.state = exports.INITED;\n        this.onChange();\n        return true;\n    };\n    TimerState.prototype.isInited = function () {\n        return this.state === exports.INITED;\n    };\n    TimerState.prototype.setPlaying = function () {\n        if (this.state === exports.PLAYING) {\n            return false;\n        }\n        this.state = exports.PLAYING;\n        this.onChange();\n        return true;\n    };\n    TimerState.prototype.isPlaying = function () {\n        return this.state === exports.PLAYING;\n    };\n    TimerState.prototype.setPaused = function () {\n        if (this.state !== exports.PLAYING) {\n            return false;\n        }\n        this.state = exports.PAUSED;\n        this.onChange();\n        return true;\n    };\n    TimerState.prototype.isPaused = function () {\n        return this.state === exports.PAUSED;\n    };\n    TimerState.prototype.setStopped = function () {\n        if (this.state === exports.INITED) {\n            return false;\n        }\n        this.state = exports.STOPPED;\n        this.onChange();\n        return true;\n    };\n    TimerState.prototype.isStopped = function () {\n        return this.state === exports.STOPPED;\n    };\n    return TimerState;\n}());\nexports.default = TimerState;\n//# sourceMappingURL=TimerState.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar TimerModel_1 = require(\"../lib/models/TimerModel\");\nvar getTimeParts_1 = __importDefault(require(\"../lib/helpers/getTimeParts\"));\nfunction useTimer(_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.initialTime, initialTime = _c === void 0 ? 0 : _c, _d = _b.direction, direction = _d === void 0 ? \"forward\" : _d, _e = _b.timeToUpdate, timeToUpdate = _e === void 0 ? 1000 : _e, _f = _b.startImmediately, startImmediately = _f === void 0 ? true : _f, _g = _b.lastUnit, lastUnit = _g === void 0 ? \"d\" : _g, _h = _b.checkpoints, checkpoints = _h === void 0 ? [] : _h, onStart = _b.onStart, onResume = _b.onResume, onPause = _b.onPause, onStop = _b.onStop, onReset = _b.onReset;\n    var _j = react_1.useState(__assign({}, getTimeParts_1.default(initialTime < 0 ? 0 : initialTime, lastUnit), { state: 'INITED' })), timerValues = _j[0], setTimerValues = _j[1];\n    var timer = react_1.useMemo(function () {\n        return new TimerModel_1.TimerModel({\n            initialTime: initialTime,\n            direction: direction,\n            timeToUpdate: timeToUpdate,\n            lastUnit: lastUnit,\n            checkpoints: checkpoints,\n            onChange: function (timerValue) {\n                return setTimerValues(function (state) { return (__assign({}, state, timerValue)); });\n            },\n        });\n    }, []);\n    var setTime = react_1.useCallback(function (time) { return timer.setTime(time); }, [timer]);\n    var getTime = react_1.useCallback(function () { return timer.getTime(); }, [timer]);\n    var getTimerState = react_1.useCallback(function () { return timer.state; }, [timer]);\n    var setDirection = react_1.useCallback(function (direction) { return timer.setDirection(direction); }, [timer]);\n    var setLastUnit = react_1.useCallback(function (lastUnit) { return timer.setLastUnit(lastUnit); }, [timer]);\n    var setCheckpoints = react_1.useCallback(function (checkpoints) { return timer.setCheckpoints(checkpoints); }, [timer]);\n    var setTimeToUpdate = react_1.useCallback(function (interval) { return timer.setTimeToUpdate(interval); }, [timer]);\n    var start = react_1.useCallback(function () { timer.start(); onStart && onStart(); }, [timer, onStart]);\n    var stop = react_1.useCallback(function () { timer.stop(); onStop && onStop(); }, [timer, onStop]);\n    var pause = react_1.useCallback(function () { timer.pause(); onPause && onPause(); }, [timer, onPause]);\n    var reset = react_1.useCallback(function () { timer.reset(); onReset && onReset(); }, [timer, onReset]);\n    var resume = react_1.useCallback(function () { timer.resume(); onResume && onResume(); }, [timer, onResume]);\n    var controls = react_1.useMemo(function () { return ({\n        start: start,\n        stop: stop,\n        pause: pause,\n        reset: reset,\n        resume: resume,\n        setTime: setTime,\n        getTime: getTime,\n        getTimerState: getTimerState,\n        setDirection: setDirection,\n        setLastUnit: setLastUnit,\n        setTimeToUpdate: setTimeToUpdate,\n        setCheckpoints: setCheckpoints,\n    }); }, [\n        start, stop, pause, reset, resume,\n        setTime, getTime, getTimerState, setDirection, setLastUnit, setTimeToUpdate, setCheckpoints,\n    ]);\n    react_1.useEffect(function () {\n        if (startImmediately) {\n            start();\n        }\n        return function () {\n            stop();\n        };\n    }, []);\n    return {\n        controls: controls,\n        value: timerValues,\n    };\n}\nexports.useTimer = useTimer;\n//# sourceMappingURL=useTimer.js.map","module.exports = __webpack_public_path__ + \"static/media/start.1023f927.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.e35eb772.svg\";"],"sourceRoot":""}